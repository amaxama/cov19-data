{"ast":null,"code":"const puppeteer = require('puppeteer');\n\nconst express = require('express');\n\nconst app = express();\napp.get('/data', async (req, res) => {\n  // scrapeMnData(req.query.url, res)\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto(req.query.url);\n  const [mnCasesEl] = await page.$x('//*[@id=\"body\"]/ul[2]/li/text()');\n  const mnCasesTxt = await mnCasesEl.getProperty('textContent');\n  const mnCases = await mnCasesTxt.jsonValue();\n  const [mnCasesChartEl] = await page.$x('//*[@id=\"body\"]/img[1]');\n  const mnCasesChartTxt = await mnCasesChartEl.getProperty('alt');\n  const mnCasesChart = await mnCasesChartTxt.jsonValue();\n  logCases(mnCases);\n  res.writeHead(200, {\n    'Content-Type': 'application/json',\n    'Content-Length': data.length\n  });\n  res.end(splitCases(mnCasesChart));\n  await browser.close();\n});\napp.listen(4000);\n\nasync function scrapeData(ilUrl, mnUrl) {// scrapeIlData(ilUrl)\n  // return scrapeMnData(mnUrl);\n}\n\nfunction buildDate() {\n  let today = new Date();\n  return String(today.getMonth() + 1) + '-' + String(today.getDate()) + '-' + String(today.getFullYear());\n}\n\nconst data = [{\n  name: 'Page A',\n  IL: 4000,\n  MN: 2400\n}, {\n  name: 'Page B',\n  IL: 3000,\n  MN: 1398\n}, {\n  name: 'Page C',\n  IL: 2000,\n  MN: 11800\n}, {\n  name: 'Page D',\n  IL: 2780,\n  MN: 3908\n}, {\n  name: 'Page E',\n  IL: 1890,\n  MN: 4800\n}, {\n  name: 'Page F',\n  IL: 2390,\n  MN: 3800\n}, {\n  name: 'Page G',\n  IL: 3490,\n  MN: 4300\n}];\n\nfunction logCases(cases) {\n  console.log(buildDate() + ': ' + cases);\n}\n\nasync function scrapeIlData(url) {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto(url);\n  const [ilCasesEl] = await page.$x('//*[@id=\"covid19positive\"]');\n  const ilCasesTxt = await ilCasesEl.getProperty('textContent');\n  const ilCases = await ilCasesTxt.jsonValue();\n  logCases(ilCases);\n  browser.close();\n}\n\nfunction splitCases(cases) {\n  const data = cases.split(\"\\n\");\n  const parsed = data.slice(1, data.length - 1);\n  parsed.forEach(getDayData);\n  return parsed;\n}\n\nfunction getDayData(dayString, index, arr) {\n  const day = dayString.replace(\"\\t\", \" \").split(\", \");\n  arr[index] = {\n    name: day[0],\n    MN_new: Number(day[1]),\n    MN_total: Number(day[2])\n  }; // dayString = dayString.replace(\"\\t\", \" \").split(\", \");\n  // console.log(dayString);\n  // return a;\n}\n\nasync function scrapeMnData(url, res) {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto(url);\n  const [mnCasesEl] = await page.$x('//*[@id=\"body\"]/ul[2]/li/text()');\n  const mnCasesTxt = await mnCasesEl.getProperty('textContent');\n  const mnCases = await mnCasesTxt.jsonValue();\n  const [mnCasesChartEl] = await page.$x('//*[@id=\"body\"]/img[1]');\n  const mnCasesChartTxt = await mnCasesChartEl.getProperty('alt');\n  const mnCasesChart = await mnCasesChartTxt.jsonValue();\n  logCases(mnCases);\n  res.writeHead(200, {\n    'Content-Type': 'application/json',\n    'Content-Length': data.length\n  });\n  res.end(splitCases(mnCasesChart));\n  await browser.close(); // return splitCases(mnCasesChart);\n} // scrapeData('https://covid19stats.live/coronavirus/statistics/usa')\n// scrapeData('https://www.amazon.com/Black-Swan-Improbable-Nicholas-Takeaways/dp/B01AIKQ5LY/ref=sr_1_8?dchild=1&keywords=The+Black+Swan&qid=1586028302&s=books&sr=1-8')\n// scrapeData('https://www.amazon.com/Original-Sliding-C-Slide-Privacy-Chromebooks/dp/B00HPC66U4/ref=redir_mobile_desktop?ie=UTF8&aaxitk=kvaMVx7EIROYGBtiHtuOuA&hsa_cr_id=9596171540801&ref_=sb_s_sparkle')\n\n\nconst mnData = scrapeData('https://www.dph.illinois.gov/covid19/covid19-statistics', 'https://www.health.state.mn.us/diseases/coronavirus/situation.html'); // export default mnData;","map":{"version":3,"sources":["/Users/annamaxam/repos/covid19-graph/src/scrapers.js"],"names":["puppeteer","require","express","app","get","req","res","browser","launch","page","newPage","goto","query","url","mnCasesEl","$x","mnCasesTxt","getProperty","mnCases","jsonValue","mnCasesChartEl","mnCasesChartTxt","mnCasesChart","logCases","writeHead","data","length","end","splitCases","close","listen","scrapeData","ilUrl","mnUrl","buildDate","today","Date","String","getMonth","getDate","getFullYear","name","IL","MN","cases","console","log","scrapeIlData","ilCasesEl","ilCasesTxt","ilCases","split","parsed","slice","forEach","getDayData","dayString","index","arr","day","replace","MN_new","Number","MN_total","scrapeMnData","mnData"],"mappings":"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","sourcesContent":["const puppeteer = require('puppeteer');\nconst express = require('express');\n\nconst app = express();\n\napp.get('/data', async (req, res) => { \n    // scrapeMnData(req.query.url, res)\n\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto(req.query.url);\n\n    const [mnCasesEl] = await page.$x('//*[@id=\"body\"]/ul[2]/li/text()')\n    const mnCasesTxt = await mnCasesEl.getProperty('textContent');\n    const mnCases = await mnCasesTxt.jsonValue();\n\n    const [mnCasesChartEl] = await page.$x('//*[@id=\"body\"]/img[1]');\n    const mnCasesChartTxt = await mnCasesChartEl.getProperty('alt');\n    const mnCasesChart = await mnCasesChartTxt.jsonValue();\n\n    logCases(mnCases);\n\n    res.writeHead(200, {\n        'Content-Type': 'application/json',\n        'Content-Length': data.length\n    });\n    res.end(splitCases(mnCasesChart));\n    \n    await browser.close();\n\n\n\n})\n\napp.listen(4000);\n\n\nasync function scrapeData(ilUrl, mnUrl) {\n    // scrapeIlData(ilUrl)\n    // return scrapeMnData(mnUrl);\n}\n\nfunction buildDate() {\n    let today = new Date();\n    return (String(today.getMonth() + 1) + '-' + String(today.getDate()) + '-' + String(today.getFullYear()));\n\n}\n\nconst data = [\n    {\n        name: 'Page A', IL: 4000, MN: 2400\n    },\n    {\n        name: 'Page B', IL: 3000, MN: 1398\n    },\n    {\n        name: 'Page C', IL: 2000, MN: 11800\n    },\n    {\n        name: 'Page D', IL: 2780, MN: 3908\n    },\n    {\n        name: 'Page E', IL: 1890, MN: 4800\n    },\n    {\n        name: 'Page F', IL: 2390, MN: 3800\n    },\n    {\n        name: 'Page G', IL: 3490, MN: 4300\n    },\n];\n\n\nfunction logCases(cases) {\n    \n    console.log(buildDate() + ': ' + cases);\n}\n\n\n\nasync function scrapeIlData(url) {\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto(url);\n\n    \n    const [ilCasesEl] = await page.$x('//*[@id=\"covid19positive\"]');\n    const ilCasesTxt = await ilCasesEl.getProperty('textContent');\n    const ilCases = await ilCasesTxt.jsonValue();\n\n    logCases(ilCases);\n\n    browser.close();\n\n}\n\nfunction splitCases(cases) {\n    const data = cases.split(\"\\n\");\n    const parsed = data.slice(1, data.length-1);\n    parsed.forEach(getDayData);\n    return parsed; \n}\n\nfunction getDayData(dayString, index, arr) {\n    const day = dayString.replace(\"\\t\", \" \").split(\", \");\n    arr[index] = { name: day[0], MN_new: Number(day[1]), MN_total: Number(day[2]) }\n    // dayString = dayString.replace(\"\\t\", \" \").split(\", \");\n    // console.log(dayString);\n    // return a;\n}\n\nasync function scrapeMnData(url, res) {\n    const browser = await puppeteer.launch();\n    const page = await browser.newPage();\n    await page.goto(url);\n\n    const [mnCasesEl] = await page.$x('//*[@id=\"body\"]/ul[2]/li/text()')\n    const mnCasesTxt = await mnCasesEl.getProperty('textContent');\n    const mnCases = await mnCasesTxt.jsonValue();\n\n    const [mnCasesChartEl] = await page.$x('//*[@id=\"body\"]/img[1]');\n    const mnCasesChartTxt = await mnCasesChartEl.getProperty('alt');\n    const mnCasesChart = await mnCasesChartTxt.jsonValue();\n\n    logCases(mnCases);\n\n    res.writeHead(200, {\n        'Content-Type': 'application/json',\n        'Content-Length': data.length\n    });\n    res.end(splitCases(mnCasesChart));\n    \n    await browser.close();\n\n    // return splitCases(mnCasesChart);\n\n}\n\n\n\n\n// scrapeData('https://covid19stats.live/coronavirus/statistics/usa')\n\n// scrapeData('https://www.amazon.com/Black-Swan-Improbable-Nicholas-Takeaways/dp/B01AIKQ5LY/ref=sr_1_8?dchild=1&keywords=The+Black+Swan&qid=1586028302&s=books&sr=1-8')\n\n// scrapeData('https://www.amazon.com/Original-Sliding-C-Slide-Privacy-Chromebooks/dp/B00HPC66U4/ref=redir_mobile_desktop?ie=UTF8&aaxitk=kvaMVx7EIROYGBtiHtuOuA&hsa_cr_id=9596171540801&ref_=sb_s_sparkle')\n\nconst mnData = scrapeData('https://www.dph.illinois.gov/covid19/covid19-statistics', 'https://www.health.state.mn.us/diseases/coronavirus/situation.html')\n\n// export default mnData;\n\n\n"]},"metadata":{},"sourceType":"module"}