{"ast":null,"code":"var _jsxFileName = \"/Users/annamaxam/repos/covid19-graph/client/src/BarChart.js\";\nimport React, { PureComponent } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport _ from 'lodash';\n\nclass Example extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mnData: null,\n      ilData: null,\n      mergedData: null\n    };\n\n    this.fetchMnData = async () => {\n      const response = await fetch('/api/data?url=https://www.health.state.mn.us/diseases/coronavirus/situation.html');\n      console.log(\"got response\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.fetchIlData = async () => {\n      const response = await fetch('/api/ilData?url=https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Illinois');\n      console.log(\"got response\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.fetchMergedData = async () => {\n      const ilResponse = await fetch('/api/data?url=https://www.health.state.mn.us/diseases/coronavirus/situation.html');\n      console.log(\"got response\");\n      const ilBody = await ilResponse.json();\n\n      if (ilResponse.status !== 200) {\n        throw Error(ilBody.message);\n      }\n\n      const ilData = ilBody.data;\n      const mnResponse = await fetch('/api/ilData?url=https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Illinois');\n      console.log(\"got response\");\n      const mnBody = await mnResponse.json();\n\n      if (mnResponse.status !== 200) {\n        throw Error(mnBody.message);\n      }\n\n      const mnData = mnBody.data;\n      console.log(mnData.slice(0, mnData.length));\n      console.log(ilData.slice(0, ilData.length));\n\n      const merged = _.mergeWith(mnData, ilData);\n\n      console.log(merged.slice(0, merged.length));\n      const mData = mnData.concat(ilData);\n      console.log(\"mdata: \" + mData);\n      const newData = mData.slice(0, mData.length);\n      mData.filter(function (v) {\n        return this[v.name] ? Object.assign(this[v.name], v) : this[v.name] = v;\n      }, {});\n      console.log(mnData);\n      return mnData;\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.fetchMnData().then(res => this.setState({\n      mnData: res.data\n    })).then(res => console.log(\"response: \" + res)).catch(err => console.log(err));\n    this.fetchIlData().then(res => this.setState({\n      ilData: res.data\n    })).then(res => console.log(\"response: \" + res)).catch(err => console.log(err));\n    this.fetchMergedData().then(res => this.setState({\n      mergedData: res\n    })).then(res => console.log(\"response: \" + res)).catch(err => console.log(err));\n  }\n\n  // fetchMergedData = () => {\n  //     var mData = this.state.mnData.concat(this.state.ilData);\n  //     const newData = mData.filter(function(v) {\n  //         return this[v.name]?\n  //           !Object.assign(this[v.name], v):\n  //           (this[v.name] = v);\n  //       }, {});\n  //     console.log(newData);\n  //     return newData;\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      width: 750,\n      height: 300,\n      data: this.state.mnData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"MN_new\",\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"MN_total\",\n      fill: \"#008080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(BarChart, {\n      width: 750,\n      height: 300,\n      data: this.state.ilData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"IL_new\",\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"IL_total\",\n      fill: \"#008080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(BarChart, {\n      width: 750,\n      height: 300,\n      data: this.state.mergedData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      height: 60,\n      tick: /*#__PURE__*/React.createElement(CustomizedAxisTick, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 61\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"MN_new\",\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"IL_new\",\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"MN_total\",\n      fill: \"#008080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"IL_total\",\n      fill: \"#008080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/Users/annamaxam/repos/covid19-graph/client/src/BarChart.js"],"names":["React","PureComponent","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","_","Example","state","mnData","ilData","mergedData","fetchMnData","response","fetch","console","log","body","json","status","Error","message","fetchIlData","fetchMergedData","ilResponse","ilBody","data","mnResponse","mnBody","slice","length","merged","mergeWith","mData","concat","newData","filter","v","name","Object","assign","componentDidMount","then","res","setState","catch","err","render","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\nimport _ from 'lodash';\n\n\n\nclass Example extends PureComponent {\n    // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\n    state = {\n        mnData: null,\n        ilData: null,\n        mergedData: null\n    };\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.fetchMnData()\n            .then(res => this.setState({ mnData: res.data }))\n            .then(res => console.log(\"response: \" + res))\n            .catch(err => console.log(err));\n        this.fetchIlData()\n            .then(res => this.setState({ ilData: res.data }))\n            .then(res => console.log(\"response: \" + res))\n            .catch(err => console.log(err));\n        this.fetchMergedData()\n            .then(res => this.setState({mergedData: res }))\n            .then(res => console.log(\"response: \" + res))\n            .catch(err => console.log(err));\n        \n        \n        \n    }\n\n    fetchMnData = async () => {\n        const response = await fetch('/api/data?url=https://www.health.state.mn.us/diseases/coronavirus/situation.html');\n        console.log(\"got response\");\n        const body = await response.json();\n\n        if(response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    fetchIlData = async () => {\n        const response = await fetch('/api/ilData?url=https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Illinois');\n        console.log(\"got response\");\n        const body = await response.json();\n\n        if(response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    fetchMergedData = async () => {\n        const ilResponse = await fetch('/api/data?url=https://www.health.state.mn.us/diseases/coronavirus/situation.html');\n        console.log(\"got response\");\n        const ilBody = await ilResponse.json();\n\n        if(ilResponse.status !== 200) {\n            throw Error(ilBody.message)\n        }\n        const ilData = ilBody.data;\n\n        const mnResponse = await fetch('/api/ilData?url=https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Illinois');\n        console.log(\"got response\");\n        const mnBody = await mnResponse.json();\n\n        if(mnResponse.status !== 200) {\n            throw Error(mnBody.message)\n        }\n        const mnData = mnBody.data;\n\n        console.log(mnData.slice(0,mnData.length));\n        console.log(ilData.slice(0,ilData.length));\n        const merged = _.mergeWith(mnData, ilData);\n        console.log(merged.slice(0,merged.length));\n        const mData = mnData.concat(ilData);\n        console.log(\"mdata: \" + mData);\n        const newData = mData.slice(0, mData.length);\n        mData.filter(function(v) {\n            return this[v.name]?\n              Object.assign(this[v.name], v):\n              (this[v.name] = v);\n          }, {});\n        console.log(mnData);\n        return mnData;\n    };\n\n\n\n\n    // fetchMergedData = () => {\n    //     var mData = this.state.mnData.concat(this.state.ilData);\n    //     const newData = mData.filter(function(v) {\n    //         return this[v.name]?\n    //           !Object.assign(this[v.name], v):\n    //           (this[v.name] = v);\n    //       }, {});\n    //     console.log(newData);\n    //     return newData;\n    // }\n\n    render() {\n        return (\n            <div>\n                <BarChart\n                    width={750}\n                    height={300}\n                    data={this.state.mnData}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"MN_new\" fill=\"#82ca9d\" />\n                    <Bar dataKey=\"MN_total\" fill=\"#008080\" />\n                </BarChart>\n                <BarChart\n                    width={750}\n                    height={300}\n                    data={this.state.ilData}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"IL_new\" fill=\"#82ca9d\" />\n                    <Bar dataKey=\"IL_total\" fill=\"#008080\" />\n                </BarChart>\n                <BarChart\n                    width={750}\n                    height={300}\n                    data={this.state.mergedData}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" height={60} tick={<CustomizedAxisTick />}/>\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"MN_new\" fill=\"#82ca9d\" />\n                    <Bar dataKey=\"IL_new\" fill=\"#82ca9d\" />\n                    <Bar dataKey=\"MN_total\" fill=\"#008080\" />\n                    <Bar dataKey=\"IL_total\" fill=\"#008080\" />\n                </BarChart>\n            </div>\n        );\n    }\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}