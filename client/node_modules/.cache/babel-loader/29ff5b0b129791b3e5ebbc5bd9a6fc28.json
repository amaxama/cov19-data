{"ast":null,"code":"var _jsxFileName = \"/Users/annamaxam/repos/covid19-graph/client/src/BarChart.js\";\nimport React, { PureComponent, Component } from 'react';\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nclass Example extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mnData: null,\n      ilData: null,\n      mergedData: null\n    };\n\n    this.fetchMnData = async () => {\n      const response = await fetch('/api/data?url=https://www.health.state.mn.us/diseases/coronavirus/situation.html');\n      console.log(\"got response\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.fetchIlData = async () => {\n      const response = await fetch('/api/ilData?url=https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Illinois');\n      console.log(\"got response\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.fetchMnData().then(res => this.setState({\n      mnData: res.data\n    })).then(res => console.log(\"response: \" + res)).catch(err => console.log(err));\n    this.fetchIlData().then(res => this.setState({\n      ilData: res.data\n    })).then(res => console.log(\"response: \" + res)).catch(err => console.log(err));\n    var mData = this.state.mnData.concat(this.state.ilData);\n    const newData = mData.filter(function (v) {\n      return this[v.name] ? !Object.assign(this[v.name], v) : this[v.name] = v;\n    }, {});\n    console.log(newData);\n  }\n\n  render() {\n    console.log(\"data: \" + this.state.mnData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BarChart, {\n      width: 750,\n      height: 300,\n      data: this.state.mnData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"MN_new\",\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"MN_total\",\n      fill: \"#008080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(BarChart, {\n      width: 750,\n      height: 300,\n      data: this.state.ilData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"IL_new\",\n      fill: \"#82ca9d\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"IL_total\",\n      fill: \"#008080\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/Users/annamaxam/repos/covid19-graph/client/src/BarChart.js"],"names":["React","PureComponent","Component","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Example","state","mnData","ilData","mergedData","fetchMnData","response","fetch","console","log","body","json","status","Error","message","fetchIlData","componentDidMount","then","res","setState","data","catch","err","mData","concat","newData","filter","v","name","Object","assign","render","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { PureComponent, Component } from 'react';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nclass Example extends PureComponent {\n    // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\n    state = {\n        mnData: null,\n        ilData: null,\n        mergedData: null\n    };\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n        this.fetchMnData()\n            .then(res => this.setState({ mnData: res.data }))\n            .then(res => console.log(\"response: \" + res))\n            .catch(err => console.log(err));\n        this.fetchIlData()\n            .then(res => this.setState({ ilData: res.data }))\n            .then(res => console.log(\"response: \" + res))\n            .catch(err => console.log(err));\n        \n        var mData = this.state.mnData.concat(this.state.ilData);\n        const newData = mData.filter(function(v) {\n            return this[v.name]?\n              !Object.assign(this[v.name], v):\n              (this[v.name] = v);\n          }, {});\n        console.log(newData);\n    }\n\n    fetchMnData = async () => {\n        const response = await fetch('/api/data?url=https://www.health.state.mn.us/diseases/coronavirus/situation.html');\n        console.log(\"got response\");\n        const body = await response.json();\n\n        if(response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    fetchIlData = async () => {\n        const response = await fetch('/api/ilData?url=https://en.wikipedia.org/wiki/2020_coronavirus_pandemic_in_Illinois');\n        console.log(\"got response\");\n        const body = await response.json();\n\n        if(response.status !== 200) {\n            throw Error(body.message)\n        }\n        return body;\n    };\n\n    render() {\n        console.log(\"data: \" + this.state.mnData);\n        return (\n            <div>\n                <BarChart\n                    width={750}\n                    height={300}\n                    data={this.state.mnData}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"MN_new\" fill=\"#82ca9d\" />\n                    <Bar dataKey=\"MN_total\" fill=\"#008080\" />\n                </BarChart>\n                <BarChart\n                    width={750}\n                    height={300}\n                    data={this.state.ilData}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"IL_new\" fill=\"#82ca9d\" />\n                    <Bar dataKey=\"IL_total\" fill=\"#008080\" />\n                </BarChart>\n            </div>\n        );\n    }\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}